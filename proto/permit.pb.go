// Code generated by protoc-gen-go. DO NOT EDIT.
// source: permit.proto

package permit

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("permit.proto", fileDescriptor_727fd833651e2ed7) }

var fileDescriptor_727fd833651e2ed7 = []byte{
	// 51 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x48, 0x2d, 0xca,
	0xcd, 0x2c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x8c, 0x38, 0xb8, 0xa0,
	0xac, 0x24, 0x36, 0xb0, 0x84, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xcc, 0x13, 0xb4, 0x28,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PermitClient is the client API for Permit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PermitClient interface {
}

type permitClient struct {
	cc *grpc.ClientConn
}

func NewPermitClient(cc *grpc.ClientConn) PermitClient {
	return &permitClient{cc}
}

// PermitServer is the server API for Permit service.
type PermitServer interface {
}

// UnimplementedPermitServer can be embedded to have forward compatible implementations.
type UnimplementedPermitServer struct {
}

func RegisterPermitServer(s *grpc.Server, srv PermitServer) {
	s.RegisterService(&_Permit_serviceDesc, srv)
}

var _Permit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "permit.permit",
	HandlerType: (*PermitServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "permit.proto",
}
